name: Build

# Triggers
on:
  push:
    branches-ignore:
      - 'first_docs'
      - 'no_build*'
      - master
  pull_request:
    branches:
      - 'release'

# Specify what jobs to run
jobs:
  TestBuildDeploy:
    name: Test, Lint, Build and Deploy
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }} 
    
    steps:
      - uses: actions/checkout@v1
      
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2

      - name: Install Dependencies
        run: poetry install

      - name: Test
        working-directory: ./tests
        run: poetry run pytest . --cov ../lambda_cache --cov-report term-missing -vv

      - name: Lint with black
        run: poetry run black lambda_cache --check

      # Only runs on release branch
      - name: Update Test Coverage
        if: github.ref == 'refs/heads/release'  # only on the feature branch do we publish code coverage stats
        working-directory: ./tests
        run: |
          poetry run coveralls debug
          poetry run coveralls
      
      - name: Build
        if: github.ref == 'refs/heads/release'
        working-directory: .
        run: poetry build
      
      - name: publish
        if: github.ref == 'refs/heads/release'
        working-directory: .
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish

      - name: Archive production artifacts
        if: github.ref == 'refs/heads/release'
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

    # Success / Failure, publish to Slack
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: lambda-cache
          status: SUCCESS
          color: good

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: lambda-cache
          status: FAILED
          color: danger
